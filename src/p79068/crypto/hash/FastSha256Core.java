package p79068.crypto.hash;

import java.math.BigInteger;
import java.util.Arrays;

import p79068.Assert;
import p79068.crypto.Zeroizer;
import p79068.hash.HashValue;
import p79068.math.IntegerBitMath;


// The compress() method is very large, so by default the HotSpot JVM will not JIT-compile it, resorting to a very slow interpretation mode instead. Use the JVM option -XX:-DontCompileHugeMethods to solve this problem.
final class FastSha256Core extends BlockHasherCore {
	
	private final boolean sha256Mode;
	
	private int[] state;
	
	
	
	public FastSha256Core(boolean sha256Mode) {
		this.sha256Mode = sha256Mode;
		if (sha256Mode) {
			state = new int[] {
				0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,
				0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19
			};
		} else {
			state = new int[] {
				0xC1059ED8, 0x367CD507, 0x3070DD17, 0xF70E5939,
				0xFFC00B31, 0x68581511, 0x64F98FA7, 0xBEFA4FA4
			};
		}
	}
	
	
	
	@Override
	public FastSha256Core clone() {
		if (state == null)
			throw new IllegalStateException("Already zeroized");
		FastSha256Core result = (FastSha256Core)super.clone();
		result.state = result.state.clone();
		return result;
	}
	
	
	@Override
	public void zeroize() {
		if (state == null)
			throw new IllegalStateException("Already zeroized");
		state = Zeroizer.clear(state);
	}
	
	
	
	@Override
	public void compress(byte[] msg, int off, int len) {
		Assert.assertRangeInBounds(msg.length, off, len);
		if (len % 64 != 0)
			throw new AssertionError();
		
		// For each block of 64 bytes
		for (int i = off, end = off + len; i < end; i += 64) {
			
			// Pack bytes into int32s in big endian
			int sch00 = msg[i +  0] << 24 | (msg[i +  1] & 0xFF) << 16 | (msg[i +  2] & 0xFF) << 8 | (msg[i +  3] & 0xFF);
			int sch01 = msg[i +  4] << 24 | (msg[i +  5] & 0xFF) << 16 | (msg[i +  6] & 0xFF) << 8 | (msg[i +  7] & 0xFF);
			int sch02 = msg[i +  8] << 24 | (msg[i +  9] & 0xFF) << 16 | (msg[i + 10] & 0xFF) << 8 | (msg[i + 11] & 0xFF);
			int sch03 = msg[i + 12] << 24 | (msg[i + 13] & 0xFF) << 16 | (msg[i + 14] & 0xFF) << 8 | (msg[i + 15] & 0xFF);
			int sch04 = msg[i + 16] << 24 | (msg[i + 17] & 0xFF) << 16 | (msg[i + 18] & 0xFF) << 8 | (msg[i + 19] & 0xFF);
			int sch05 = msg[i + 20] << 24 | (msg[i + 21] & 0xFF) << 16 | (msg[i + 22] & 0xFF) << 8 | (msg[i + 23] & 0xFF);
			int sch06 = msg[i + 24] << 24 | (msg[i + 25] & 0xFF) << 16 | (msg[i + 26] & 0xFF) << 8 | (msg[i + 27] & 0xFF);
			int sch07 = msg[i + 28] << 24 | (msg[i + 29] & 0xFF) << 16 | (msg[i + 30] & 0xFF) << 8 | (msg[i + 31] & 0xFF);
			int sch08 = msg[i + 32] << 24 | (msg[i + 33] & 0xFF) << 16 | (msg[i + 34] & 0xFF) << 8 | (msg[i + 35] & 0xFF);
			int sch09 = msg[i + 36] << 24 | (msg[i + 37] & 0xFF) << 16 | (msg[i + 38] & 0xFF) << 8 | (msg[i + 39] & 0xFF);
			int sch10 = msg[i + 40] << 24 | (msg[i + 41] & 0xFF) << 16 | (msg[i + 42] & 0xFF) << 8 | (msg[i + 43] & 0xFF);
			int sch11 = msg[i + 44] << 24 | (msg[i + 45] & 0xFF) << 16 | (msg[i + 46] & 0xFF) << 8 | (msg[i + 47] & 0xFF);
			int sch12 = msg[i + 48] << 24 | (msg[i + 49] & 0xFF) << 16 | (msg[i + 50] & 0xFF) << 8 | (msg[i + 51] & 0xFF);
			int sch13 = msg[i + 52] << 24 | (msg[i + 53] & 0xFF) << 16 | (msg[i + 54] & 0xFF) << 8 | (msg[i + 55] & 0xFF);
			int sch14 = msg[i + 56] << 24 | (msg[i + 57] & 0xFF) << 16 | (msg[i + 58] & 0xFF) << 8 | (msg[i + 59] & 0xFF);
			int sch15 = msg[i + 60] << 24 | (msg[i + 61] & 0xFF) << 16 | (msg[i + 62] & 0xFF) << 8 | (msg[i + 63] & 0xFF);
			
			// Expand the schedule
			int sch16 = sch00 + sch09 + (((sch01 << 25) | (sch01 >>> 7)) ^ ((sch01 << 14) | (sch01 >>> 18)) ^ (sch01 >>> 3)) + (((sch14 << 15) | (sch14 >>> 17)) ^ ((sch14 << (32- 19)) | (sch14 >>> 19)) ^ (sch14 >>> 10));
			int sch17 = sch01 + sch10 + (((sch02 << 25) | (sch02 >>> 7)) ^ ((sch02 << 14) | (sch02 >>> 18)) ^ (sch02 >>> 3)) + (((sch15 << 15) | (sch15 >>> 17)) ^ ((sch15 << (32- 19)) | (sch15 >>> 19)) ^ (sch15 >>> 10));
			int sch18 = sch02 + sch11 + (((sch03 << 25) | (sch03 >>> 7)) ^ ((sch03 << 14) | (sch03 >>> 18)) ^ (sch03 >>> 3)) + (((sch16 << 15) | (sch16 >>> 17)) ^ ((sch16 << (32- 19)) | (sch16 >>> 19)) ^ (sch16 >>> 10));
			int sch19 = sch03 + sch12 + (((sch04 << 25) | (sch04 >>> 7)) ^ ((sch04 << 14) | (sch04 >>> 18)) ^ (sch04 >>> 3)) + (((sch17 << 15) | (sch17 >>> 17)) ^ ((sch17 << (32- 19)) | (sch17 >>> 19)) ^ (sch17 >>> 10));
			int sch20 = sch04 + sch13 + (((sch05 << 25) | (sch05 >>> 7)) ^ ((sch05 << 14) | (sch05 >>> 18)) ^ (sch05 >>> 3)) + (((sch18 << 15) | (sch18 >>> 17)) ^ ((sch18 << (32- 19)) | (sch18 >>> 19)) ^ (sch18 >>> 10));
			int sch21 = sch05 + sch14 + (((sch06 << 25) | (sch06 >>> 7)) ^ ((sch06 << 14) | (sch06 >>> 18)) ^ (sch06 >>> 3)) + (((sch19 << 15) | (sch19 >>> 17)) ^ ((sch19 << (32- 19)) | (sch19 >>> 19)) ^ (sch19 >>> 10));
			int sch22 = sch06 + sch15 + (((sch07 << 25) | (sch07 >>> 7)) ^ ((sch07 << 14) | (sch07 >>> 18)) ^ (sch07 >>> 3)) + (((sch20 << 15) | (sch20 >>> 17)) ^ ((sch20 << (32- 19)) | (sch20 >>> 19)) ^ (sch20 >>> 10));
			int sch23 = sch07 + sch16 + (((sch08 << 25) | (sch08 >>> 7)) ^ ((sch08 << 14) | (sch08 >>> 18)) ^ (sch08 >>> 3)) + (((sch21 << 15) | (sch21 >>> 17)) ^ ((sch21 << (32- 19)) | (sch21 >>> 19)) ^ (sch21 >>> 10));
			int sch24 = sch08 + sch17 + (((sch09 << 25) | (sch09 >>> 7)) ^ ((sch09 << 14) | (sch09 >>> 18)) ^ (sch09 >>> 3)) + (((sch22 << 15) | (sch22 >>> 17)) ^ ((sch22 << (32- 19)) | (sch22 >>> 19)) ^ (sch22 >>> 10));
			int sch25 = sch09 + sch18 + (((sch10 << 25) | (sch10 >>> 7)) ^ ((sch10 << 14) | (sch10 >>> 18)) ^ (sch10 >>> 3)) + (((sch23 << 15) | (sch23 >>> 17)) ^ ((sch23 << (32- 19)) | (sch23 >>> 19)) ^ (sch23 >>> 10));
			int sch26 = sch10 + sch19 + (((sch11 << 25) | (sch11 >>> 7)) ^ ((sch11 << 14) | (sch11 >>> 18)) ^ (sch11 >>> 3)) + (((sch24 << 15) | (sch24 >>> 17)) ^ ((sch24 << (32- 19)) | (sch24 >>> 19)) ^ (sch24 >>> 10));
			int sch27 = sch11 + sch20 + (((sch12 << 25) | (sch12 >>> 7)) ^ ((sch12 << 14) | (sch12 >>> 18)) ^ (sch12 >>> 3)) + (((sch25 << 15) | (sch25 >>> 17)) ^ ((sch25 << (32- 19)) | (sch25 >>> 19)) ^ (sch25 >>> 10));
			int sch28 = sch12 + sch21 + (((sch13 << 25) | (sch13 >>> 7)) ^ ((sch13 << 14) | (sch13 >>> 18)) ^ (sch13 >>> 3)) + (((sch26 << 15) | (sch26 >>> 17)) ^ ((sch26 << (32- 19)) | (sch26 >>> 19)) ^ (sch26 >>> 10));
			int sch29 = sch13 + sch22 + (((sch14 << 25) | (sch14 >>> 7)) ^ ((sch14 << 14) | (sch14 >>> 18)) ^ (sch14 >>> 3)) + (((sch27 << 15) | (sch27 >>> 17)) ^ ((sch27 << (32- 19)) | (sch27 >>> 19)) ^ (sch27 >>> 10));
			int sch30 = sch14 + sch23 + (((sch15 << 25) | (sch15 >>> 7)) ^ ((sch15 << 14) | (sch15 >>> 18)) ^ (sch15 >>> 3)) + (((sch28 << 15) | (sch28 >>> 17)) ^ ((sch28 << (32- 19)) | (sch28 >>> 19)) ^ (sch28 >>> 10));
			int sch31 = sch15 + sch24 + (((sch16 << 25) | (sch16 >>> 7)) ^ ((sch16 << 14) | (sch16 >>> 18)) ^ (sch16 >>> 3)) + (((sch29 << 15) | (sch29 >>> 17)) ^ ((sch29 << (32- 19)) | (sch29 >>> 19)) ^ (sch29 >>> 10));
			int sch32 = sch16 + sch25 + (((sch17 << 25) | (sch17 >>> 7)) ^ ((sch17 << 14) | (sch17 >>> 18)) ^ (sch17 >>> 3)) + (((sch30 << 15) | (sch30 >>> 17)) ^ ((sch30 << (32- 19)) | (sch30 >>> 19)) ^ (sch30 >>> 10));
			int sch33 = sch17 + sch26 + (((sch18 << 25) | (sch18 >>> 7)) ^ ((sch18 << 14) | (sch18 >>> 18)) ^ (sch18 >>> 3)) + (((sch31 << 15) | (sch31 >>> 17)) ^ ((sch31 << (32- 19)) | (sch31 >>> 19)) ^ (sch31 >>> 10));
			int sch34 = sch18 + sch27 + (((sch19 << 25) | (sch19 >>> 7)) ^ ((sch19 << 14) | (sch19 >>> 18)) ^ (sch19 >>> 3)) + (((sch32 << 15) | (sch32 >>> 17)) ^ ((sch32 << (32- 19)) | (sch32 >>> 19)) ^ (sch32 >>> 10));
			int sch35 = sch19 + sch28 + (((sch20 << 25) | (sch20 >>> 7)) ^ ((sch20 << 14) | (sch20 >>> 18)) ^ (sch20 >>> 3)) + (((sch33 << 15) | (sch33 >>> 17)) ^ ((sch33 << (32- 19)) | (sch33 >>> 19)) ^ (sch33 >>> 10));
			int sch36 = sch20 + sch29 + (((sch21 << 25) | (sch21 >>> 7)) ^ ((sch21 << 14) | (sch21 >>> 18)) ^ (sch21 >>> 3)) + (((sch34 << 15) | (sch34 >>> 17)) ^ ((sch34 << (32- 19)) | (sch34 >>> 19)) ^ (sch34 >>> 10));
			int sch37 = sch21 + sch30 + (((sch22 << 25) | (sch22 >>> 7)) ^ ((sch22 << 14) | (sch22 >>> 18)) ^ (sch22 >>> 3)) + (((sch35 << 15) | (sch35 >>> 17)) ^ ((sch35 << (32- 19)) | (sch35 >>> 19)) ^ (sch35 >>> 10));
			int sch38 = sch22 + sch31 + (((sch23 << 25) | (sch23 >>> 7)) ^ ((sch23 << 14) | (sch23 >>> 18)) ^ (sch23 >>> 3)) + (((sch36 << 15) | (sch36 >>> 17)) ^ ((sch36 << (32- 19)) | (sch36 >>> 19)) ^ (sch36 >>> 10));
			int sch39 = sch23 + sch32 + (((sch24 << 25) | (sch24 >>> 7)) ^ ((sch24 << 14) | (sch24 >>> 18)) ^ (sch24 >>> 3)) + (((sch37 << 15) | (sch37 >>> 17)) ^ ((sch37 << (32- 19)) | (sch37 >>> 19)) ^ (sch37 >>> 10));
			int sch40 = sch24 + sch33 + (((sch25 << 25) | (sch25 >>> 7)) ^ ((sch25 << 14) | (sch25 >>> 18)) ^ (sch25 >>> 3)) + (((sch38 << 15) | (sch38 >>> 17)) ^ ((sch38 << (32- 19)) | (sch38 >>> 19)) ^ (sch38 >>> 10));
			int sch41 = sch25 + sch34 + (((sch26 << 25) | (sch26 >>> 7)) ^ ((sch26 << 14) | (sch26 >>> 18)) ^ (sch26 >>> 3)) + (((sch39 << 15) | (sch39 >>> 17)) ^ ((sch39 << (32- 19)) | (sch39 >>> 19)) ^ (sch39 >>> 10));
			int sch42 = sch26 + sch35 + (((sch27 << 25) | (sch27 >>> 7)) ^ ((sch27 << 14) | (sch27 >>> 18)) ^ (sch27 >>> 3)) + (((sch40 << 15) | (sch40 >>> 17)) ^ ((sch40 << (32- 19)) | (sch40 >>> 19)) ^ (sch40 >>> 10));
			int sch43 = sch27 + sch36 + (((sch28 << 25) | (sch28 >>> 7)) ^ ((sch28 << 14) | (sch28 >>> 18)) ^ (sch28 >>> 3)) + (((sch41 << 15) | (sch41 >>> 17)) ^ ((sch41 << (32- 19)) | (sch41 >>> 19)) ^ (sch41 >>> 10));
			int sch44 = sch28 + sch37 + (((sch29 << 25) | (sch29 >>> 7)) ^ ((sch29 << 14) | (sch29 >>> 18)) ^ (sch29 >>> 3)) + (((sch42 << 15) | (sch42 >>> 17)) ^ ((sch42 << (32- 19)) | (sch42 >>> 19)) ^ (sch42 >>> 10));
			int sch45 = sch29 + sch38 + (((sch30 << 25) | (sch30 >>> 7)) ^ ((sch30 << 14) | (sch30 >>> 18)) ^ (sch30 >>> 3)) + (((sch43 << 15) | (sch43 >>> 17)) ^ ((sch43 << (32- 19)) | (sch43 >>> 19)) ^ (sch43 >>> 10));
			int sch46 = sch30 + sch39 + (((sch31 << 25) | (sch31 >>> 7)) ^ ((sch31 << 14) | (sch31 >>> 18)) ^ (sch31 >>> 3)) + (((sch44 << 15) | (sch44 >>> 17)) ^ ((sch44 << (32- 19)) | (sch44 >>> 19)) ^ (sch44 >>> 10));
			int sch47 = sch31 + sch40 + (((sch32 << 25) | (sch32 >>> 7)) ^ ((sch32 << 14) | (sch32 >>> 18)) ^ (sch32 >>> 3)) + (((sch45 << 15) | (sch45 >>> 17)) ^ ((sch45 << (32- 19)) | (sch45 >>> 19)) ^ (sch45 >>> 10));
			int sch48 = sch32 + sch41 + (((sch33 << 25) | (sch33 >>> 7)) ^ ((sch33 << 14) | (sch33 >>> 18)) ^ (sch33 >>> 3)) + (((sch46 << 15) | (sch46 >>> 17)) ^ ((sch46 << (32- 19)) | (sch46 >>> 19)) ^ (sch46 >>> 10));
			int sch49 = sch33 + sch42 + (((sch34 << 25) | (sch34 >>> 7)) ^ ((sch34 << 14) | (sch34 >>> 18)) ^ (sch34 >>> 3)) + (((sch47 << 15) | (sch47 >>> 17)) ^ ((sch47 << (32- 19)) | (sch47 >>> 19)) ^ (sch47 >>> 10));
			int sch50 = sch34 + sch43 + (((sch35 << 25) | (sch35 >>> 7)) ^ ((sch35 << 14) | (sch35 >>> 18)) ^ (sch35 >>> 3)) + (((sch48 << 15) | (sch48 >>> 17)) ^ ((sch48 << (32- 19)) | (sch48 >>> 19)) ^ (sch48 >>> 10));
			int sch51 = sch35 + sch44 + (((sch36 << 25) | (sch36 >>> 7)) ^ ((sch36 << 14) | (sch36 >>> 18)) ^ (sch36 >>> 3)) + (((sch49 << 15) | (sch49 >>> 17)) ^ ((sch49 << (32- 19)) | (sch49 >>> 19)) ^ (sch49 >>> 10));
			int sch52 = sch36 + sch45 + (((sch37 << 25) | (sch37 >>> 7)) ^ ((sch37 << 14) | (sch37 >>> 18)) ^ (sch37 >>> 3)) + (((sch50 << 15) | (sch50 >>> 17)) ^ ((sch50 << (32- 19)) | (sch50 >>> 19)) ^ (sch50 >>> 10));
			int sch53 = sch37 + sch46 + (((sch38 << 25) | (sch38 >>> 7)) ^ ((sch38 << 14) | (sch38 >>> 18)) ^ (sch38 >>> 3)) + (((sch51 << 15) | (sch51 >>> 17)) ^ ((sch51 << (32- 19)) | (sch51 >>> 19)) ^ (sch51 >>> 10));
			int sch54 = sch38 + sch47 + (((sch39 << 25) | (sch39 >>> 7)) ^ ((sch39 << 14) | (sch39 >>> 18)) ^ (sch39 >>> 3)) + (((sch52 << 15) | (sch52 >>> 17)) ^ ((sch52 << (32- 19)) | (sch52 >>> 19)) ^ (sch52 >>> 10));
			int sch55 = sch39 + sch48 + (((sch40 << 25) | (sch40 >>> 7)) ^ ((sch40 << 14) | (sch40 >>> 18)) ^ (sch40 >>> 3)) + (((sch53 << 15) | (sch53 >>> 17)) ^ ((sch53 << (32- 19)) | (sch53 >>> 19)) ^ (sch53 >>> 10));
			int sch56 = sch40 + sch49 + (((sch41 << 25) | (sch41 >>> 7)) ^ ((sch41 << 14) | (sch41 >>> 18)) ^ (sch41 >>> 3)) + (((sch54 << 15) | (sch54 >>> 17)) ^ ((sch54 << (32- 19)) | (sch54 >>> 19)) ^ (sch54 >>> 10));
			int sch57 = sch41 + sch50 + (((sch42 << 25) | (sch42 >>> 7)) ^ ((sch42 << 14) | (sch42 >>> 18)) ^ (sch42 >>> 3)) + (((sch55 << 15) | (sch55 >>> 17)) ^ ((sch55 << (32- 19)) | (sch55 >>> 19)) ^ (sch55 >>> 10));
			int sch58 = sch42 + sch51 + (((sch43 << 25) | (sch43 >>> 7)) ^ ((sch43 << 14) | (sch43 >>> 18)) ^ (sch43 >>> 3)) + (((sch56 << 15) | (sch56 >>> 17)) ^ ((sch56 << (32- 19)) | (sch56 >>> 19)) ^ (sch56 >>> 10));
			int sch59 = sch43 + sch52 + (((sch44 << 25) | (sch44 >>> 7)) ^ ((sch44 << 14) | (sch44 >>> 18)) ^ (sch44 >>> 3)) + (((sch57 << 15) | (sch57 >>> 17)) ^ ((sch57 << (32- 19)) | (sch57 >>> 19)) ^ (sch57 >>> 10));
			int sch60 = sch44 + sch53 + (((sch45 << 25) | (sch45 >>> 7)) ^ ((sch45 << 14) | (sch45 >>> 18)) ^ (sch45 >>> 3)) + (((sch58 << 15) | (sch58 >>> 17)) ^ ((sch58 << (32- 19)) | (sch58 >>> 19)) ^ (sch58 >>> 10));
			int sch61 = sch45 + sch54 + (((sch46 << 25) | (sch46 >>> 7)) ^ ((sch46 << 14) | (sch46 >>> 18)) ^ (sch46 >>> 3)) + (((sch59 << 15) | (sch59 >>> 17)) ^ ((sch59 << (32- 19)) | (sch59 >>> 19)) ^ (sch59 >>> 10));
			int sch62 = sch46 + sch55 + (((sch47 << 25) | (sch47 >>> 7)) ^ ((sch47 << 14) | (sch47 >>> 18)) ^ (sch47 >>> 3)) + (((sch60 << 15) | (sch60 >>> 17)) ^ ((sch60 << (32- 19)) | (sch60 >>> 19)) ^ (sch60 >>> 10));
			int sch63 = sch47 + sch56 + (((sch48 << 25) | (sch48 >>> 7)) ^ ((sch48 << 14) | (sch48 >>> 18)) ^ (sch48 >>> 3)) + (((sch61 << 15) | (sch61 >>> 17)) ^ ((sch61 << (32- 19)) | (sch61 >>> 19)) ^ (sch61 >>> 10));
			
			// The 64 rounds
			int a = state[0];
			int b = state[1];
			int c = state[2];
			int d = state[3];
			int e = state[4];
			int f = state[5];
			int g = state[6];
			int h = state[7];
			h += (((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7) | (e >>> 25))) + (g ^ (e & (f ^ g))) + 0x428A2F98 + sch00;  d += h;  h += (((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22))) + ((a & (b | c)) | (b & c));
			g += (((d << 26) | (d >>> 6)) ^ ((d << 21) | (d >>> 11)) ^ ((d << 7) | (d >>> 25))) + (f ^ (d & (e ^ f))) + 0x71374491 + sch01;  c += g;  g += (((h << 30) | (h >>> 2)) ^ ((h << 19) | (h >>> 13)) ^ ((h << 10) | (h >>> 22))) + ((h & (a | b)) | (a & b));
			f += (((c << 26) | (c >>> 6)) ^ ((c << 21) | (c >>> 11)) ^ ((c << 7) | (c >>> 25))) + (e ^ (c & (d ^ e))) + 0xB5C0FBCF + sch02;  b += f;  f += (((g << 30) | (g >>> 2)) ^ ((g << 19) | (g >>> 13)) ^ ((g << 10) | (g >>> 22))) + ((g & (h | a)) | (h & a));
			e += (((b << 26) | (b >>> 6)) ^ ((b << 21) | (b >>> 11)) ^ ((b << 7) | (b >>> 25))) + (d ^ (b & (c ^ d))) + 0xE9B5DBA5 + sch03;  a += e;  e += (((f << 30) | (f >>> 2)) ^ ((f << 19) | (f >>> 13)) ^ ((f << 10) | (f >>> 22))) + ((f & (g | h)) | (g & h));
			d += (((a << 26) | (a >>> 6)) ^ ((a << 21) | (a >>> 11)) ^ ((a << 7) | (a >>> 25))) + (c ^ (a & (b ^ c))) + 0x3956C25B + sch04;  h += d;  d += (((e << 30) | (e >>> 2)) ^ ((e << 19) | (e >>> 13)) ^ ((e << 10) | (e >>> 22))) + ((e & (f | g)) | (f & g));
			c += (((h << 26) | (h >>> 6)) ^ ((h << 21) | (h >>> 11)) ^ ((h << 7) | (h >>> 25))) + (b ^ (h & (a ^ b))) + 0x59F111F1 + sch05;  g += c;  c += (((d << 30) | (d >>> 2)) ^ ((d << 19) | (d >>> 13)) ^ ((d << 10) | (d >>> 22))) + ((d & (e | f)) | (e & f));
			b += (((g << 26) | (g >>> 6)) ^ ((g << 21) | (g >>> 11)) ^ ((g << 7) | (g >>> 25))) + (a ^ (g & (h ^ a))) + 0x923F82A4 + sch06;  f += b;  b += (((c << 30) | (c >>> 2)) ^ ((c << 19) | (c >>> 13)) ^ ((c << 10) | (c >>> 22))) + ((c & (d | e)) | (d & e));
			a += (((f << 26) | (f >>> 6)) ^ ((f << 21) | (f >>> 11)) ^ ((f << 7) | (f >>> 25))) + (h ^ (f & (g ^ h))) + 0xAB1C5ED5 + sch07;  e += a;  a += (((b << 30) | (b >>> 2)) ^ ((b << 19) | (b >>> 13)) ^ ((b << 10) | (b >>> 22))) + ((b & (c | d)) | (c & d));
			h += (((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7) | (e >>> 25))) + (g ^ (e & (f ^ g))) + 0xD807AA98 + sch08;  d += h;  h += (((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22))) + ((a & (b | c)) | (b & c));
			g += (((d << 26) | (d >>> 6)) ^ ((d << 21) | (d >>> 11)) ^ ((d << 7) | (d >>> 25))) + (f ^ (d & (e ^ f))) + 0x12835B01 + sch09;  c += g;  g += (((h << 30) | (h >>> 2)) ^ ((h << 19) | (h >>> 13)) ^ ((h << 10) | (h >>> 22))) + ((h & (a | b)) | (a & b));
			f += (((c << 26) | (c >>> 6)) ^ ((c << 21) | (c >>> 11)) ^ ((c << 7) | (c >>> 25))) + (e ^ (c & (d ^ e))) + 0x243185BE + sch10;  b += f;  f += (((g << 30) | (g >>> 2)) ^ ((g << 19) | (g >>> 13)) ^ ((g << 10) | (g >>> 22))) + ((g & (h | a)) | (h & a));
			e += (((b << 26) | (b >>> 6)) ^ ((b << 21) | (b >>> 11)) ^ ((b << 7) | (b >>> 25))) + (d ^ (b & (c ^ d))) + 0x550C7DC3 + sch11;  a += e;  e += (((f << 30) | (f >>> 2)) ^ ((f << 19) | (f >>> 13)) ^ ((f << 10) | (f >>> 22))) + ((f & (g | h)) | (g & h));
			d += (((a << 26) | (a >>> 6)) ^ ((a << 21) | (a >>> 11)) ^ ((a << 7) | (a >>> 25))) + (c ^ (a & (b ^ c))) + 0x72BE5D74 + sch12;  h += d;  d += (((e << 30) | (e >>> 2)) ^ ((e << 19) | (e >>> 13)) ^ ((e << 10) | (e >>> 22))) + ((e & (f | g)) | (f & g));
			c += (((h << 26) | (h >>> 6)) ^ ((h << 21) | (h >>> 11)) ^ ((h << 7) | (h >>> 25))) + (b ^ (h & (a ^ b))) + 0x80DEB1FE + sch13;  g += c;  c += (((d << 30) | (d >>> 2)) ^ ((d << 19) | (d >>> 13)) ^ ((d << 10) | (d >>> 22))) + ((d & (e | f)) | (e & f));
			b += (((g << 26) | (g >>> 6)) ^ ((g << 21) | (g >>> 11)) ^ ((g << 7) | (g >>> 25))) + (a ^ (g & (h ^ a))) + 0x9BDC06A7 + sch14;  f += b;  b += (((c << 30) | (c >>> 2)) ^ ((c << 19) | (c >>> 13)) ^ ((c << 10) | (c >>> 22))) + ((c & (d | e)) | (d & e));
			a += (((f << 26) | (f >>> 6)) ^ ((f << 21) | (f >>> 11)) ^ ((f << 7) | (f >>> 25))) + (h ^ (f & (g ^ h))) + 0xC19BF174 + sch15;  e += a;  a += (((b << 30) | (b >>> 2)) ^ ((b << 19) | (b >>> 13)) ^ ((b << 10) | (b >>> 22))) + ((b & (c | d)) | (c & d));
			h += (((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7) | (e >>> 25))) + (g ^ (e & (f ^ g))) + 0xE49B69C1 + sch16;  d += h;  h += (((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22))) + ((a & (b | c)) | (b & c));
			g += (((d << 26) | (d >>> 6)) ^ ((d << 21) | (d >>> 11)) ^ ((d << 7) | (d >>> 25))) + (f ^ (d & (e ^ f))) + 0xEFBE4786 + sch17;  c += g;  g += (((h << 30) | (h >>> 2)) ^ ((h << 19) | (h >>> 13)) ^ ((h << 10) | (h >>> 22))) + ((h & (a | b)) | (a & b));
			f += (((c << 26) | (c >>> 6)) ^ ((c << 21) | (c >>> 11)) ^ ((c << 7) | (c >>> 25))) + (e ^ (c & (d ^ e))) + 0x0FC19DC6 + sch18;  b += f;  f += (((g << 30) | (g >>> 2)) ^ ((g << 19) | (g >>> 13)) ^ ((g << 10) | (g >>> 22))) + ((g & (h | a)) | (h & a));
			e += (((b << 26) | (b >>> 6)) ^ ((b << 21) | (b >>> 11)) ^ ((b << 7) | (b >>> 25))) + (d ^ (b & (c ^ d))) + 0x240CA1CC + sch19;  a += e;  e += (((f << 30) | (f >>> 2)) ^ ((f << 19) | (f >>> 13)) ^ ((f << 10) | (f >>> 22))) + ((f & (g | h)) | (g & h));
			d += (((a << 26) | (a >>> 6)) ^ ((a << 21) | (a >>> 11)) ^ ((a << 7) | (a >>> 25))) + (c ^ (a & (b ^ c))) + 0x2DE92C6F + sch20;  h += d;  d += (((e << 30) | (e >>> 2)) ^ ((e << 19) | (e >>> 13)) ^ ((e << 10) | (e >>> 22))) + ((e & (f | g)) | (f & g));
			c += (((h << 26) | (h >>> 6)) ^ ((h << 21) | (h >>> 11)) ^ ((h << 7) | (h >>> 25))) + (b ^ (h & (a ^ b))) + 0x4A7484AA + sch21;  g += c;  c += (((d << 30) | (d >>> 2)) ^ ((d << 19) | (d >>> 13)) ^ ((d << 10) | (d >>> 22))) + ((d & (e | f)) | (e & f));
			b += (((g << 26) | (g >>> 6)) ^ ((g << 21) | (g >>> 11)) ^ ((g << 7) | (g >>> 25))) + (a ^ (g & (h ^ a))) + 0x5CB0A9DC + sch22;  f += b;  b += (((c << 30) | (c >>> 2)) ^ ((c << 19) | (c >>> 13)) ^ ((c << 10) | (c >>> 22))) + ((c & (d | e)) | (d & e));
			a += (((f << 26) | (f >>> 6)) ^ ((f << 21) | (f >>> 11)) ^ ((f << 7) | (f >>> 25))) + (h ^ (f & (g ^ h))) + 0x76F988DA + sch23;  e += a;  a += (((b << 30) | (b >>> 2)) ^ ((b << 19) | (b >>> 13)) ^ ((b << 10) | (b >>> 22))) + ((b & (c | d)) | (c & d));
			h += (((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7) | (e >>> 25))) + (g ^ (e & (f ^ g))) + 0x983E5152 + sch24;  d += h;  h += (((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22))) + ((a & (b | c)) | (b & c));
			g += (((d << 26) | (d >>> 6)) ^ ((d << 21) | (d >>> 11)) ^ ((d << 7) | (d >>> 25))) + (f ^ (d & (e ^ f))) + 0xA831C66D + sch25;  c += g;  g += (((h << 30) | (h >>> 2)) ^ ((h << 19) | (h >>> 13)) ^ ((h << 10) | (h >>> 22))) + ((h & (a | b)) | (a & b));
			f += (((c << 26) | (c >>> 6)) ^ ((c << 21) | (c >>> 11)) ^ ((c << 7) | (c >>> 25))) + (e ^ (c & (d ^ e))) + 0xB00327C8 + sch26;  b += f;  f += (((g << 30) | (g >>> 2)) ^ ((g << 19) | (g >>> 13)) ^ ((g << 10) | (g >>> 22))) + ((g & (h | a)) | (h & a));
			e += (((b << 26) | (b >>> 6)) ^ ((b << 21) | (b >>> 11)) ^ ((b << 7) | (b >>> 25))) + (d ^ (b & (c ^ d))) + 0xBF597FC7 + sch27;  a += e;  e += (((f << 30) | (f >>> 2)) ^ ((f << 19) | (f >>> 13)) ^ ((f << 10) | (f >>> 22))) + ((f & (g | h)) | (g & h));
			d += (((a << 26) | (a >>> 6)) ^ ((a << 21) | (a >>> 11)) ^ ((a << 7) | (a >>> 25))) + (c ^ (a & (b ^ c))) + 0xC6E00BF3 + sch28;  h += d;  d += (((e << 30) | (e >>> 2)) ^ ((e << 19) | (e >>> 13)) ^ ((e << 10) | (e >>> 22))) + ((e & (f | g)) | (f & g));
			c += (((h << 26) | (h >>> 6)) ^ ((h << 21) | (h >>> 11)) ^ ((h << 7) | (h >>> 25))) + (b ^ (h & (a ^ b))) + 0xD5A79147 + sch29;  g += c;  c += (((d << 30) | (d >>> 2)) ^ ((d << 19) | (d >>> 13)) ^ ((d << 10) | (d >>> 22))) + ((d & (e | f)) | (e & f));
			b += (((g << 26) | (g >>> 6)) ^ ((g << 21) | (g >>> 11)) ^ ((g << 7) | (g >>> 25))) + (a ^ (g & (h ^ a))) + 0x06CA6351 + sch30;  f += b;  b += (((c << 30) | (c >>> 2)) ^ ((c << 19) | (c >>> 13)) ^ ((c << 10) | (c >>> 22))) + ((c & (d | e)) | (d & e));
			a += (((f << 26) | (f >>> 6)) ^ ((f << 21) | (f >>> 11)) ^ ((f << 7) | (f >>> 25))) + (h ^ (f & (g ^ h))) + 0x14292967 + sch31;  e += a;  a += (((b << 30) | (b >>> 2)) ^ ((b << 19) | (b >>> 13)) ^ ((b << 10) | (b >>> 22))) + ((b & (c | d)) | (c & d));
			h += (((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7) | (e >>> 25))) + (g ^ (e & (f ^ g))) + 0x27B70A85 + sch32;  d += h;  h += (((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22))) + ((a & (b | c)) | (b & c));
			g += (((d << 26) | (d >>> 6)) ^ ((d << 21) | (d >>> 11)) ^ ((d << 7) | (d >>> 25))) + (f ^ (d & (e ^ f))) + 0x2E1B2138 + sch33;  c += g;  g += (((h << 30) | (h >>> 2)) ^ ((h << 19) | (h >>> 13)) ^ ((h << 10) | (h >>> 22))) + ((h & (a | b)) | (a & b));
			f += (((c << 26) | (c >>> 6)) ^ ((c << 21) | (c >>> 11)) ^ ((c << 7) | (c >>> 25))) + (e ^ (c & (d ^ e))) + 0x4D2C6DFC + sch34;  b += f;  f += (((g << 30) | (g >>> 2)) ^ ((g << 19) | (g >>> 13)) ^ ((g << 10) | (g >>> 22))) + ((g & (h | a)) | (h & a));
			e += (((b << 26) | (b >>> 6)) ^ ((b << 21) | (b >>> 11)) ^ ((b << 7) | (b >>> 25))) + (d ^ (b & (c ^ d))) + 0x53380D13 + sch35;  a += e;  e += (((f << 30) | (f >>> 2)) ^ ((f << 19) | (f >>> 13)) ^ ((f << 10) | (f >>> 22))) + ((f & (g | h)) | (g & h));
			d += (((a << 26) | (a >>> 6)) ^ ((a << 21) | (a >>> 11)) ^ ((a << 7) | (a >>> 25))) + (c ^ (a & (b ^ c))) + 0x650A7354 + sch36;  h += d;  d += (((e << 30) | (e >>> 2)) ^ ((e << 19) | (e >>> 13)) ^ ((e << 10) | (e >>> 22))) + ((e & (f | g)) | (f & g));
			c += (((h << 26) | (h >>> 6)) ^ ((h << 21) | (h >>> 11)) ^ ((h << 7) | (h >>> 25))) + (b ^ (h & (a ^ b))) + 0x766A0ABB + sch37;  g += c;  c += (((d << 30) | (d >>> 2)) ^ ((d << 19) | (d >>> 13)) ^ ((d << 10) | (d >>> 22))) + ((d & (e | f)) | (e & f));
			b += (((g << 26) | (g >>> 6)) ^ ((g << 21) | (g >>> 11)) ^ ((g << 7) | (g >>> 25))) + (a ^ (g & (h ^ a))) + 0x81C2C92E + sch38;  f += b;  b += (((c << 30) | (c >>> 2)) ^ ((c << 19) | (c >>> 13)) ^ ((c << 10) | (c >>> 22))) + ((c & (d | e)) | (d & e));
			a += (((f << 26) | (f >>> 6)) ^ ((f << 21) | (f >>> 11)) ^ ((f << 7) | (f >>> 25))) + (h ^ (f & (g ^ h))) + 0x92722C85 + sch39;  e += a;  a += (((b << 30) | (b >>> 2)) ^ ((b << 19) | (b >>> 13)) ^ ((b << 10) | (b >>> 22))) + ((b & (c | d)) | (c & d));
			h += (((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7) | (e >>> 25))) + (g ^ (e & (f ^ g))) + 0xA2BFE8A1 + sch40;  d += h;  h += (((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22))) + ((a & (b | c)) | (b & c));
			g += (((d << 26) | (d >>> 6)) ^ ((d << 21) | (d >>> 11)) ^ ((d << 7) | (d >>> 25))) + (f ^ (d & (e ^ f))) + 0xA81A664B + sch41;  c += g;  g += (((h << 30) | (h >>> 2)) ^ ((h << 19) | (h >>> 13)) ^ ((h << 10) | (h >>> 22))) + ((h & (a | b)) | (a & b));
			f += (((c << 26) | (c >>> 6)) ^ ((c << 21) | (c >>> 11)) ^ ((c << 7) | (c >>> 25))) + (e ^ (c & (d ^ e))) + 0xC24B8B70 + sch42;  b += f;  f += (((g << 30) | (g >>> 2)) ^ ((g << 19) | (g >>> 13)) ^ ((g << 10) | (g >>> 22))) + ((g & (h | a)) | (h & a));
			e += (((b << 26) | (b >>> 6)) ^ ((b << 21) | (b >>> 11)) ^ ((b << 7) | (b >>> 25))) + (d ^ (b & (c ^ d))) + 0xC76C51A3 + sch43;  a += e;  e += (((f << 30) | (f >>> 2)) ^ ((f << 19) | (f >>> 13)) ^ ((f << 10) | (f >>> 22))) + ((f & (g | h)) | (g & h));
			d += (((a << 26) | (a >>> 6)) ^ ((a << 21) | (a >>> 11)) ^ ((a << 7) | (a >>> 25))) + (c ^ (a & (b ^ c))) + 0xD192E819 + sch44;  h += d;  d += (((e << 30) | (e >>> 2)) ^ ((e << 19) | (e >>> 13)) ^ ((e << 10) | (e >>> 22))) + ((e & (f | g)) | (f & g));
			c += (((h << 26) | (h >>> 6)) ^ ((h << 21) | (h >>> 11)) ^ ((h << 7) | (h >>> 25))) + (b ^ (h & (a ^ b))) + 0xD6990624 + sch45;  g += c;  c += (((d << 30) | (d >>> 2)) ^ ((d << 19) | (d >>> 13)) ^ ((d << 10) | (d >>> 22))) + ((d & (e | f)) | (e & f));
			b += (((g << 26) | (g >>> 6)) ^ ((g << 21) | (g >>> 11)) ^ ((g << 7) | (g >>> 25))) + (a ^ (g & (h ^ a))) + 0xF40E3585 + sch46;  f += b;  b += (((c << 30) | (c >>> 2)) ^ ((c << 19) | (c >>> 13)) ^ ((c << 10) | (c >>> 22))) + ((c & (d | e)) | (d & e));
			a += (((f << 26) | (f >>> 6)) ^ ((f << 21) | (f >>> 11)) ^ ((f << 7) | (f >>> 25))) + (h ^ (f & (g ^ h))) + 0x106AA070 + sch47;  e += a;  a += (((b << 30) | (b >>> 2)) ^ ((b << 19) | (b >>> 13)) ^ ((b << 10) | (b >>> 22))) + ((b & (c | d)) | (c & d));
			h += (((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7) | (e >>> 25))) + (g ^ (e & (f ^ g))) + 0x19A4C116 + sch48;  d += h;  h += (((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22))) + ((a & (b | c)) | (b & c));
			g += (((d << 26) | (d >>> 6)) ^ ((d << 21) | (d >>> 11)) ^ ((d << 7) | (d >>> 25))) + (f ^ (d & (e ^ f))) + 0x1E376C08 + sch49;  c += g;  g += (((h << 30) | (h >>> 2)) ^ ((h << 19) | (h >>> 13)) ^ ((h << 10) | (h >>> 22))) + ((h & (a | b)) | (a & b));
			f += (((c << 26) | (c >>> 6)) ^ ((c << 21) | (c >>> 11)) ^ ((c << 7) | (c >>> 25))) + (e ^ (c & (d ^ e))) + 0x2748774C + sch50;  b += f;  f += (((g << 30) | (g >>> 2)) ^ ((g << 19) | (g >>> 13)) ^ ((g << 10) | (g >>> 22))) + ((g & (h | a)) | (h & a));
			e += (((b << 26) | (b >>> 6)) ^ ((b << 21) | (b >>> 11)) ^ ((b << 7) | (b >>> 25))) + (d ^ (b & (c ^ d))) + 0x34B0BCB5 + sch51;  a += e;  e += (((f << 30) | (f >>> 2)) ^ ((f << 19) | (f >>> 13)) ^ ((f << 10) | (f >>> 22))) + ((f & (g | h)) | (g & h));
			d += (((a << 26) | (a >>> 6)) ^ ((a << 21) | (a >>> 11)) ^ ((a << 7) | (a >>> 25))) + (c ^ (a & (b ^ c))) + 0x391C0CB3 + sch52;  h += d;  d += (((e << 30) | (e >>> 2)) ^ ((e << 19) | (e >>> 13)) ^ ((e << 10) | (e >>> 22))) + ((e & (f | g)) | (f & g));
			c += (((h << 26) | (h >>> 6)) ^ ((h << 21) | (h >>> 11)) ^ ((h << 7) | (h >>> 25))) + (b ^ (h & (a ^ b))) + 0x4ED8AA4A + sch53;  g += c;  c += (((d << 30) | (d >>> 2)) ^ ((d << 19) | (d >>> 13)) ^ ((d << 10) | (d >>> 22))) + ((d & (e | f)) | (e & f));
			b += (((g << 26) | (g >>> 6)) ^ ((g << 21) | (g >>> 11)) ^ ((g << 7) | (g >>> 25))) + (a ^ (g & (h ^ a))) + 0x5B9CCA4F + sch54;  f += b;  b += (((c << 30) | (c >>> 2)) ^ ((c << 19) | (c >>> 13)) ^ ((c << 10) | (c >>> 22))) + ((c & (d | e)) | (d & e));
			a += (((f << 26) | (f >>> 6)) ^ ((f << 21) | (f >>> 11)) ^ ((f << 7) | (f >>> 25))) + (h ^ (f & (g ^ h))) + 0x682E6FF3 + sch55;  e += a;  a += (((b << 30) | (b >>> 2)) ^ ((b << 19) | (b >>> 13)) ^ ((b << 10) | (b >>> 22))) + ((b & (c | d)) | (c & d));
			h += (((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7) | (e >>> 25))) + (g ^ (e & (f ^ g))) + 0x748F82EE + sch56;  d += h;  h += (((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22))) + ((a & (b | c)) | (b & c));
			g += (((d << 26) | (d >>> 6)) ^ ((d << 21) | (d >>> 11)) ^ ((d << 7) | (d >>> 25))) + (f ^ (d & (e ^ f))) + 0x78A5636F + sch57;  c += g;  g += (((h << 30) | (h >>> 2)) ^ ((h << 19) | (h >>> 13)) ^ ((h << 10) | (h >>> 22))) + ((h & (a | b)) | (a & b));
			f += (((c << 26) | (c >>> 6)) ^ ((c << 21) | (c >>> 11)) ^ ((c << 7) | (c >>> 25))) + (e ^ (c & (d ^ e))) + 0x84C87814 + sch58;  b += f;  f += (((g << 30) | (g >>> 2)) ^ ((g << 19) | (g >>> 13)) ^ ((g << 10) | (g >>> 22))) + ((g & (h | a)) | (h & a));
			e += (((b << 26) | (b >>> 6)) ^ ((b << 21) | (b >>> 11)) ^ ((b << 7) | (b >>> 25))) + (d ^ (b & (c ^ d))) + 0x8CC70208 + sch59;  a += e;  e += (((f << 30) | (f >>> 2)) ^ ((f << 19) | (f >>> 13)) ^ ((f << 10) | (f >>> 22))) + ((f & (g | h)) | (g & h));
			d += (((a << 26) | (a >>> 6)) ^ ((a << 21) | (a >>> 11)) ^ ((a << 7) | (a >>> 25))) + (c ^ (a & (b ^ c))) + 0x90BEFFFA + sch60;  h += d;  d += (((e << 30) | (e >>> 2)) ^ ((e << 19) | (e >>> 13)) ^ ((e << 10) | (e >>> 22))) + ((e & (f | g)) | (f & g));
			c += (((h << 26) | (h >>> 6)) ^ ((h << 21) | (h >>> 11)) ^ ((h << 7) | (h >>> 25))) + (b ^ (h & (a ^ b))) + 0xA4506CEB + sch61;  g += c;  c += (((d << 30) | (d >>> 2)) ^ ((d << 19) | (d >>> 13)) ^ ((d << 10) | (d >>> 22))) + ((d & (e | f)) | (e & f));
			b += (((g << 26) | (g >>> 6)) ^ ((g << 21) | (g >>> 11)) ^ ((g << 7) | (g >>> 25))) + (a ^ (g & (h ^ a))) + 0xBEF9A3F7 + sch62;  f += b;  b += (((c << 30) | (c >>> 2)) ^ ((c << 19) | (c >>> 13)) ^ ((c << 10) | (c >>> 22))) + ((c & (d | e)) | (d & e));
			a += (((f << 26) | (f >>> 6)) ^ ((f << 21) | (f >>> 11)) ^ ((f << 7) | (f >>> 25))) + (h ^ (f & (g ^ h))) + 0xC67178F2 + sch63;  e += a;  a += (((b << 30) | (b >>> 2)) ^ ((b << 19) | (b >>> 13)) ^ ((b << 10) | (b >>> 22))) + ((b & (c | d)) | (c & d));
			state[0] += a;
			state[1] += b;
			state[2] += c;
			state[3] += d;
			state[4] += e;
			state[5] += f;
			state[6] += g;
			state[7] += h;
		}
	}
	
	
	@Override
	public HashValue getHashDestructively(byte[] block, int blockFilled, BigInteger length) {
		block[blockFilled] = (byte)0x80;
		blockFilled++;
		Arrays.fill(block, blockFilled, block.length, (byte)0);
		if (blockFilled + 8 > block.length) {
			compress(block);
			Arrays.fill(block, (byte)0);
		}
		length = length.shiftLeft(3);  // Length is now in bits
		for (int i = 0; i < 8; i++)
			block[block.length - 1 - i] = length.shiftRight(i * 8).byteValue();
		compress(block);
		if (!sha256Mode)  // If SHA-224, truncate the state
			state = Arrays.copyOf(state, 7);
		return new HashValue(IntegerBitMath.toBytesBigEndian(state));
	}
	
}

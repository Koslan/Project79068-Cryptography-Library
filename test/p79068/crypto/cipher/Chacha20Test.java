package p79068.crypto.cipher;

import org.junit.Test;


public final class Chacha20Test extends StreamCipherTest {
	
	@Override
	protected StreamCipher getCipher() {
		return Chacha20.CIPHER;
	}
	
	
	
	@Test public void testBasic() {
		String[][] testCases = {
			{"000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F01000000000000090000004A00000000", "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "10F1E7E4D13B5915500FDD1FA32071C4C7D1F4C733C068030422AA9AC3D46C4ED2826446079FAA0914C2D705D98B02A2B5129CD1DE164EB9CBD083E8A2503C4E"},
			{"000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F01000000000000000000004A00000000", "4C616469657320616E642047656E746C656D656E206F662074686520636C617373206F66202739393A204966204920636F756C64206F6666657220796F75206F6E6C79206F6E652074697020666F7220746865206675747572652C2073756E73637265656E20776F756C642062652069742E", "6E2E359A2568F98041BA0728DD0D6981E97E7AEC1D4360C20A27AFCCFD9FAE0BF91B65C5524733AB8F593DABCD62B3571639D624E65152AB8F530C359F0861D807CA0DBF500D6A6156A38E088A22B65E52BC514D16CCF806818CE91AB77937365AF90BBF74A35BE6B40B8EEDF2785E42874D"},
			{"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "76B8E0ADA0F13D90405D6AE55386BD28BDD219B8A08DED1AA836EFCC8B770DC7DA41597C5157488D7724E03FB8D84A376A43B8F41518A11CC387B669B2EE6586"},
			{"000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000", "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "9F07E7BE5551387A98BA977C732D080DCB0F29A048E3656912C6533E32EE7AED29B721769CE64E43D57133B074D839D531ED1F28510AFB45ACE10A1F4B794D6F"},
			{"000000000000000000000000000000000000000000000000000000000000000101000000000000000000000000000000", "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "3AEB5224ECF849929B9D828DB1CED4DD832025E8018B8160B82284F3C949AA5A8ECA00BBB4A73BDAD192B5C42F73F2FD4E273644C8B36125A64ADDEB006C13A0"},
			{"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002", "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "C2C64D378CD536374AE204B9EF933FCD1A8B2288B3DFA49672AB765B54EE27C78A970E0E955C14F3A88E741B97C286F75F8FC299E8148362FA198A39531BED6D"},
			{},
			{"1C9240A5EB55D38AF333888604F6B5F0473917C1402B80099DCA5CBC207075C02A000000000000000000000000000002", "2754776173206272696C6C69672C20616E642074686520736C6974687920746F7665730A446964206779726520616E642067696D626C6520696E2074686520776162653A0A416C6C206D696D737920776572652074686520626F726F676F7665732C0A416E6420746865206D6F6D65207261746873206F757467726162652E", "62E6347F95ED87A45FFAE7426F27A1DF5FB69110044C0D73118EFFA95B01E5CF166D3DF2D721CAF9B21E5FB14C616871FD84C54F9D65B283196C7FE4F60553EBF39C6402C42234E32A356B3E764312A61A5532055716EAD6962568F87D3F3F7704C6A8D1BCD1BF4D50D6154B6DA731B187B58DFD728AFA36757A797AC188D1"},
		};
		for (String[] tc : testCases)
			CipherTest.testCipher(Chacha20.CIPHER, tc[0], tc[1], tc[2]);
	}
	
}
